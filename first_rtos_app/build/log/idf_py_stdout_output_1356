[1/9] Performing build step for 'bootloader'
[1/1] cd /project/build/bootloader/esp-idf/esptool_py && /opt/esp/python_env/idf5.1_py3.8_env/bin/python /opt/esp/idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /project/build/bootloader/bootloader.bin
Bootloader binary size 0x50f0 bytes. 0x2f10 bytes (37%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
/project/main/main.c:10: warning: "LOG_LOCAL_LEVEL" redefined
   10 | #define LOG_LOCAL_LEVEL ESP_LOG_VERBOSE
      | 
In file included from /project/main/main.c:9:
/opt/esp/idf/components/log/include/esp_log.h:153: note: this is the location of the previous definition
  153 | #define LOG_LOCAL_LEVEL  CONFIG_LOG_MAXIMUM_LEVEL
      | 
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable first_rtos_app.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.dev2
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /project/build/first_rtos_app.bin
[7/7] cd /project/build/esp-idf/esptool_py && /opt/esp/python_env/idf5.1_py3.8_env/bin/python /opt/esp/idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /project/build/partition_table/partition-table.bin /project/build/first_rtos_app.bin
first_rtos_app.bin binary size 0x30d20 bytes. Smallest app partition is 0x100000 bytes. 0xcf2e0 bytes (81%) free.
